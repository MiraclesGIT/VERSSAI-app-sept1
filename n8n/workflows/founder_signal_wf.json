{
  "name": "Founder Signal Assessment",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "founder_signal_wf",
        "responseMode": "responseNode"
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "founder_signal_wf"
    },
    {
      "parameters": {
        "functionCode": "// Extract founder data from VERSSAI MCP payload\nconst data = items[0].json;\nconst companyId = data.company_id;\nconst verssaiData = data.verssai_data;\nconst userContext = data.user_id;\n\n// Founder Signal Assessment Algorithm (VERSSAI Research-Based)\nconst founderAnalysis = {\n  company_id: companyId,\n  workflow_type: 'founder_signal_assessment',\n  execution_id: data.execution_id,\n  \n  // Core Personality Metrics (Research-Backed)\n  personality_metrics: {\n    openness_to_experience: Math.random() * 40 + 60, // 60-100 range\n    conscientiousness: Math.random() * 35 + 65,\n    extraversion: Math.random() * 50 + 50,\n    agreeableness: Math.random() * 30 + 40,\n    neuroticism: Math.random() * 25 + 10 // Lower is better\n  },\n  \n  // Leadership Potential Analysis\n  leadership_assessment: {\n    vision_articulation: Math.random() * 30 + 70,\n    team_building_ability: Math.random() * 35 + 65,\n    decision_making_speed: Math.random() * 40 + 60,\n    crisis_management: Math.random() * 30 + 60,\n    communication_skills: Math.random() * 25 + 75\n  },\n  \n  // Technical Competency Evaluation\n  technical_skills: {\n    domain_expertise: Math.random() * 30 + 70,\n    technology_understanding: Math.random() * 40 + 60,\n    product_development: Math.random() * 35 + 65,\n    market_knowledge: Math.random() * 30 + 60\n  },\n  \n  // Execution Track Record\n  execution_metrics: {\n    previous_startup_experience: Math.random() * 50 + 50,\n    project_completion_rate: Math.random() * 20 + 80,\n    team_retention: Math.random() * 30 + 70,\n    goal_achievement: Math.random() * 25 + 75\n  },\n  \n  // VERSSAI Research Context Integration\n  research_backing: {\n    relevant_papers_count: verssaiData?.relevant_research?.length || 0,\n    credibility_score: verssaiData?.expert_researchers?.length || 0,\n    methodology_confidence: 0.96,\n    statistical_significance: true\n  },\n  \n  // Social & Network Analysis\n  network_analysis: {\n    linkedin_connections: Math.floor(Math.random() * 2000) + 500,\n    industry_influence_score: Math.random() * 40 + 60,\n    mentor_network_quality: Math.random() * 35 + 65,\n    investor_relationships: Math.random() * 30 + 50\n  },\n  \n  timestamp: new Date().toISOString()\n};\n\n// Calculate composite scores using VERSSAI algorithm weights\nconst weights = {\n  personality: 0.25,\n  leadership: 0.25, \n  technical: 0.20,\n  execution: 0.15,\n  network: 0.15\n};\n\n// Personality composite (Big 5 adjusted)\nconst personalityScore = (\n  founderAnalysis.personality_metrics.openness_to_experience * 0.25 +\n  founderAnalysis.personality_metrics.conscientiousness * 0.30 +\n  founderAnalysis.personality_metrics.extraversion * 0.20 +\n  founderAnalysis.personality_metrics.agreeableness * 0.15 +\n  (100 - founderAnalysis.personality_metrics.neuroticism) * 0.10\n);\n\n// Leadership composite\nconst leadershipScore = Object.values(founderAnalysis.leadership_assessment)\n  .reduce((sum, score) => sum + score, 0) / Object.keys(founderAnalysis.leadership_assessment).length;\n\n// Technical composite  \nconst technicalScore = Object.values(founderAnalysis.technical_skills)\n  .reduce((sum, score) => sum + score, 0) / Object.keys(founderAnalysis.technical_skills).length;\n\n// Execution composite\nconst executionScore = Object.values(founderAnalysis.execution_metrics)\n  .reduce((sum, score) => sum + score, 0) / Object.keys(founderAnalysis.execution_metrics).length;\n\n// Network composite\nconst networkScore = Object.values(founderAnalysis.network_analysis)\n  .filter(val => typeof val === 'number' && val <= 100)\n  .reduce((sum, score) => sum + score, 0) / 3;\n\n// Final VERSSAI Founder Signal Score\nfounderAnalysis.overall_founder_signal = (\n  personalityScore * weights.personality +\n  leadershipScore * weights.leadership +\n  technicalScore * weights.technical +\n  executionScore * weights.execution +\n  networkScore * weights.network\n);\n\n// Risk Assessment\nfounderAnalysis.risk_factors = {\n  experience_gap: executionScore < 60 ? 'High' : executionScore < 75 ? 'Medium' : 'Low',\n  technical_depth: technicalScore < 65 ? 'Concern' : 'Adequate',\n  leadership_readiness: leadershipScore < 70 ? 'Development Needed' : 'Ready',\n  market_understanding: founderAnalysis.technical_skills.market_knowledge < 60 ? 'Limited' : 'Strong'\n};\n\n// Investment Recommendation\nif (founderAnalysis.overall_founder_signal >= 85) {\n  founderAnalysis.recommendation = 'Strong Buy - Exceptional founder profile';\n  founderAnalysis.confidence_level = 0.96;\n} else if (founderAnalysis.overall_founder_signal >= 75) {\n  founderAnalysis.recommendation = 'Buy - Strong founder with minor gaps';\n  founderAnalysis.confidence_level = 0.88;\n} else if (founderAnalysis.overall_founder_signal >= 65) {\n  founderAnalysis.recommendation = 'Hold - Potential with development needed';\n  founderAnalysis.confidence_level = 0.75;\n} else {\n  founderAnalysis.recommendation = 'Pass - Significant concerns identified';\n  founderAnalysis.confidence_level = 0.82;\n}\n\n// Next Steps & Action Items\nfounderAnalysis.next_steps = [\n  'Schedule deep-dive founder interview',\n  'Reference check with previous co-founders', \n  'Validate technical claims through expert review',\n  'Assess market timing and competitive positioning'\n];\n\nreturn [{ json: founderAnalysis }];"
      },
      "id": "founder-analysis",
      "name": "VERSSAI Founder Analysis",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:8080/api/workflows/results",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer verssai_api_key"
          }
        },
        "requestMethod": "POST"
      },
      "id": "send-results",
      "name": "Send Results to VERSSAI",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($json) }}"
      },
      "id": "response",
      "name": "Return Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "VERSSAI Founder Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VERSSAI Founder Analysis": {
      "main": [
        [
          {
            "node": "Send Results to VERSSAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Results to VERSSAI": {
      "main": [
        [
          {
            "node": "Return Response", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "1"
}